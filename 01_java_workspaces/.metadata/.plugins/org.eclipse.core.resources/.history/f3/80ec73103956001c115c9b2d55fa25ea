import java.util.function.Function;
import java.util.function.Predicate;

public class LamdaEx07 {

	public static void main(String[] args) {
		Function<String, Integer> f = s -> Integer.parseInt(s);
		Function<Integer, String> g = i -> Integer.toBinaryString(i);
		
		Function<String, String> h1 = f.andThen(g);
		Function<Integer, Integer> h2 = f.compose(g);
		Function<Integer, Integer> h3 = g.andThen(f);
		
		System.out.println(h1.apply("FF"));
		System.out.println(h2.apply(2));
		System.out.println(h3.apply(2));
		
		Function<String, String> f2 = x -> x;
		System.out.println(f2.apply("AAA"));
		
		Predicate<Integer> p = i -> i < 100;
		Predicate<Integer> q = i -> i < 200;		
		Predicate<Integer> r = i -> i % 2 == 0;
		Predicate<Integer> notP = p.negate();
		
		Predicate<Integer> all = notP.and(q).or(r);
		System.out.println(all.test(150));

		String str1 = "abc";
		String str2 = "abc";
		
		Predicate<String> p2 = Predicate.isEqual(str1);
		boolean result = p2.test(str2);
		System.out.println(result);
		
	
	}

}
