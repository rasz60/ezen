/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2022-02-10 05:13:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://pro.fontawesome.com/releases/v5.10.0/css/all.css\"\r\n");
      out.write("	  integrity=\"sha384-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p\"\r\n");
      out.write("	  crossorigin=\"anonymous\"/>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"joinScript.js\"></script>\r\n");
      out.write("<title>Join Us</title>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container border\">\r\n");
      out.write("	<h3 class=\"mt-3\">JOIN US</h3>\r\n");
      out.write("	<hr />\r\n");
      out.write("	<form action=\"joinCheck.jsp\" method=\"post\" class=\"p-2\">\r\n");
      out.write("		<div class=\"form-inline row p-2 mt-1 mb-1 border\">\r\n");
      out.write("			<label for=\"id\" class=\"col-2 justify-content-start\">ID</label>\r\n");
      out.write("			<input type=\"text\" class=\"form-control col-5\" id=\"id\" name=\"id\" placeholder=\"영소문자/숫자 조합 15자 이하\"/>\r\n");
      out.write("			<input type=\"submit\" value=\"중복확인\" class=\"btn btn-sm btn-success ml-2\" />\r\n");
      out.write("			<small class=\"mt-3 ml-2\">※ 아이디 : 영소문자/숫자 조합 15자 이하</small>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"form-inline row p-2 mt-1 mb-1 border\">\r\n");
      out.write("			<label for=\"pwd\" class=\"col-2 justify-content-start\">PASSWORD</label>\r\n");
      out.write("			<input type=\"password\" class=\"form-control col-5\" id=\"pwd\" name=\"pwd\" placeholder=\"영소문자/숫자/특수문자 조합 15자 이하\"/>\r\n");
      out.write("			<small class=\"mt-3 ml-2\">※ 비밀번호 : 영소문자/숫자/특수문자 조합 15자 이하</small>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"form-inline row p-2 mt-1 mb-1 border\">\r\n");
      out.write("			<label for=\"pwdCheck\" class=\"col-2 justify-content-start\">PASSWORD CHECK</label>\r\n");
      out.write("			<input type=\"password\" class=\"form-control col-5\" id=\"pwdCheck\" name=\"pwdCheck\" placeholder=\"영소문자/숫자/특수문자 조합 15자 이하\"/>\r\n");
      out.write("			<small class=\"mt-3 ml-2\" id=\"pwdCheckStatus\"></small>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"form-inline row p-2 mt-1 mb-1 border\">\r\n");
      out.write("			<label for=\"name\" class=\"col-2 justify-content-start\">NAME</label>\r\n");
      out.write("			<input type=\"password\" class=\"form-control col-5\" id=\"name\" name=\"name\" placeholder=\"이름\"/>\r\n");
      out.write("		</div>\r\n");
      out.write("	\r\n");
      out.write("		<div class=\"form-inline row p-2 mt-1 mb-1 border\">\r\n");
      out.write("			<label for=\"email\" class=\"col-2 justify-content-start\">E-MAIL</label>\r\n");
      out.write("			<input type=\"text\" class=\"form-control col-3\" id=\"email\" name=\"email\" placeholder=\"email ID\"/>\r\n");
      out.write("			<select name=\"domain\" id=\"emailDomain\" class=\"col-2 p-1 ml-1\">\r\n");
      out.write("				<option value=\"naver.com\">naver.com</option>\r\n");
      out.write("				<option value=\"daum.net\">daum.net</option>\r\n");
      out.write("				<option value=\"gmail.com\">gmail.com</option>\r\n");
      out.write("			</select>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div class=\"form-inline row p-2 mt-1 mb-1 border\">\r\n");
      out.write("			<label for=\"phoneNumber\" class=\"col-2 justify-content-start\">PHONE</label>\r\n");
      out.write("			<input type=\"text\" class=\"form-control col-1 mr-1\" id=\"phoneNumber1\" name=\"phoneNumber\" value=\"010\" disabled/>&nbsp;-&nbsp;\r\n");
      out.write("			<input type=\"text\" class=\"form-control col-1 mr-1\" id=\"phoneNumber2\" name=\"phoneNumber\"/>&nbsp;-&nbsp;\r\n");
      out.write("			<input type=\"text\" class=\"form-control col-1 mr-1\" id=\"phoneNumber3\" name=\"phoneNumber\"/>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<hr />\r\n");
      out.write("		<input type=\"submit\" value=\"가입\" class=\"btn btn-primary mb-2\" />\r\n");
      out.write("	</form>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
